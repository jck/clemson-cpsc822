%!PS-Adobe-3.0
%%Title: kyouko3.c
%%For: jck
%%Creator: VIM - Vi IMproved 7.4 (2013 Aug 10)
%%CreationDate: Wed Mar  2 20:16:41 2016
%%DocumentData: Clean8Bit
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%BoundingBox: 59 49 564 800
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%DocumentSuppliedResources: procset VIM-Prolog 1.4 1
%%+ encoding VIM-latin1 1.0 0
%%Requirements: duplex collate color
%%EndComments
%%BeginDefaults
%%PageResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%PageMedia: A4
%%EndDefaults
%%BeginProlog
%%BeginResource: procset VIM-Prolog
%%BeginDocument: /usr/share/vim/vim74/print/prolog.ps
%!PS-Adobe-3.0 Resource-ProcSet
%%Title: VIM-Prolog
%%Version: 1.4 1
%%EndComments
% Editing of this file is NOT RECOMMENDED.  You run a very good risk of causing
% all PostScript printing from VIM failing if you do.  PostScript is not called
% a write-only language for nothing!
/packedarray where not{userdict begin/setpacking/pop load def/currentpacking
false def end}{pop}ifelse/CP currentpacking def true setpacking
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/d/def ld
/db{dict begin}bd/cde{currentdict end}bd
/T true d/F false d
/SO null d/sv{/SO save d}bd/re{SO restore}bd
/L2 systemdict/languagelevel 2 copy known{get exec}{pop pop 1}ifelse 2 ge d
/m/moveto ld/s/show ld /ms{m s}bd /g/setgray ld/r/setrgbcolor ld/sp{showpage}bd
/gs/gsave ld/gr/grestore ld/cp/currentpoint ld
/ul{gs UW setlinewidth cp UO add 2 copy newpath m 3 1 roll add exch lineto
stroke gr}bd
/bg{gs r cp BO add 4 -2 roll rectfill gr}bd
/sl{90 rotate 0 exch translate}bd
L2{
/sspd{mark exch{setpagedevice}stopped cleartomark}bd
/nc{1 db/NumCopies ed cde sspd}bd
/sps{3 db/Orientation ed[3 1 roll]/PageSize ed/ImagingBBox null d cde sspd}bd
/dt{2 db/Tumble ed/Duplex ed cde sspd}bd
/c{1 db/Collate ed cde sspd}bd
}{
/nc{/#copies ed}bd
/sps{statusdict/setpage get exec}bd
/dt{statusdict/settumble 2 copy known{get exec}{pop pop pop}ifelse
statusdict/setduplexmode 2 copy known{get exec}{pop pop pop}ifelse}bd
/c{pop}bd
}ifelse
/ffs{findfont exch scalefont d}bd/sf{setfont}bd
/ref{1 db findfont dup maxlength dict/NFD ed{exch dup/FID ne{exch NFD 3 1 roll
put}{pop pop}ifelse}forall/Encoding findresource dup length 256 eq{NFD/Encoding
3 -1 roll put}{pop}ifelse NFD dup/FontType get 3 ne{/CharStrings}{/CharProcs}
ifelse 2 copy known{2 copy get dup maxlength dict copy[/questiondown/space]{2
copy known{2 copy get 2 index/.notdef 3 -1 roll put pop exit}if pop}forall put
}{pop pop}ifelse dup NFD/FontName 3 -1 roll put NFD definefont pop end}bd
CP setpacking
(\004)cvn{}bd
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%BeginResource: encoding VIM-latin1
%%BeginDocument: /usr/share/vim/vim74/print/latin1.ps
%!PS-Adobe-3.0 Resource-Encoding
%%Title: VIM-latin1
%%Version: 1.0 0
%%EndComments
/VIM-latin1[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis]
/Encoding defineresource pop
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%EndProlog
%%BeginSetup
595 842 0 sps
1 nc
T F dt
T c
%%IncludeResource: font Courier
/_F0 /VIM-latin1 /Courier ref
/F0 10 /_F0 ffs
%%IncludeResource: font Courier-Bold
/_F1 /VIM-latin1 /Courier-Bold ref
/F1 10 /_F1 ffs
%%IncludeResource: font Courier-Oblique
/_F2 /VIM-latin1 /Courier-Oblique ref
/F2 10 /_F2 ffs
%%IncludeResource: font Courier-BoldOblique
/_F3 /VIM-latin1 /Courier-BoldOblique ref
/F3 10 /_F3 ffs
/UO -1 d
/UW 0.5 d
/BO -2.5 d
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(kyouko3.c                                                                     Page 1)59.5 792.4 ms
F0 sf
0 0.498 0 r
(/*)59.5 772.4 ms
( * Authors: Praarthana Ramakrishnan, Keerthan Jaic, Tyler Allen,)59.5 762.4 ms
( *          Sriram Madhivanan)59.5 752.4 ms
( *)59.5 742.4 ms
( * Version: 03/02/2016)59.5 732.4 ms
( *)59.5 722.4 ms
( * This is a driver for the Kyouko3 virtual graphics card.)59.5 712.4 ms
( */)59.5 702.4 ms
0.188 0.188 0.498 r
(#include )59.5 682.4 ms
0.251 0.251 0 r
(<linux/wait.h>)s
0.188 0.188 0.498 r
(#include )59.5 672.4 ms
0.251 0.251 0 r
(<linux/init.h>)s
0.188 0.188 0.498 r
(#include )59.5 662.4 ms
0.251 0.251 0 r
(<linux/delay.h>)s
0.188 0.188 0.498 r
(#include )59.5 652.4 ms
0.251 0.251 0 r
(<linux/module.h>)s
0.188 0.188 0.498 r
(#include )59.5 642.4 ms
0.251 0.251 0 r
(<linux/mman.h>)s
0.188 0.188 0.498 r
(#include )59.5 632.4 ms
0.251 0.251 0 r
(<linux/kernel.h>)s
0.188 0.188 0.498 r
(#include )59.5 622.4 ms
0.251 0.251 0 r
(<linux/kernel_stat.h>)s
0.188 0.188 0.498 r
(#include )59.5 612.4 ms
0.251 0.251 0 r
(<linux/fs.h>)s
0.188 0.188 0.498 r
(#include )59.5 602.4 ms
0.251 0.251 0 r
(<linux/cdev.h>)s
0.188 0.188 0.498 r
(#include )59.5 592.4 ms
0.251 0.251 0 r
(<linux/pci.h>)s
0.188 0.188 0.498 r
(#include )59.5 582.4 ms
0.251 0.251 0 r
(<linux/spinlock.h>)s
0.188 0.188 0.498 r
(#include )59.5 562.4 ms
0.251 0.251 0 r
("kyouko3.h")s
0 g
(MODULE_LICENSE\()59.5 542.4 ms
0.251 0.251 0 r
("Proprietary")s
0 g
(\);)s
(MODULE_AUTHOR\()59.5 532.4 ms
0.251 0.251 0 r
("Sriram Madhivanan, Tyler Allen, Keerthan Jaic,")s
0 g
(              )59.5 522.4 ms
0.251 0.251 0 r
(" Praarthana Ramakrishnan")s
0 g
(\);)s
0 0.498 0 r
(// This queue head is used for snoozing while DMA buffers are full.)59.5 502.4 ms
0 g
(DECLARE_WAIT_QUEUE_HEAD\(dma_snooze\);)59.5 492.4 ms
0 0.498 0 r
(// This queue head is used for snoozing while waiting for DMA buffers to)59.5 482.4 ms
(// completely empty before exiting.)59.5 472.4 ms
0 g
(DECLARE_WAIT_QUEUE_HEAD\(unbind_snooze\);)59.5 462.4 ms
0 0.498 0 r
(// Struct containing info on a physical region of memory.)59.5 442.4 ms
0 0.125 0.251 r
(struct)59.5 432.4 ms
0 g
( phys_region {)s
(        )59.5 422.4 ms
0 0.498 0 r
(// physical address)s
0 g
(        phys_addr_t p_base;)59.5 412.4 ms
(        )59.5 402.4 ms
0 0.498 0 r
(// length of this region)s
0 g
(        )59.5 392.4 ms
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(long)s
0 g
( len;)s
(        )59.5 382.4 ms
0 0.498 0 r
(// kernel addr to this region.)s
0 g
(        )59.5 372.4 ms
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(int)s
0 g
( *k_base;)s
(};)59.5 362.4 ms
0 0.498 0 r
(// Structure containing fifo information.)59.5 342.4 ms
0 0.125 0.251 r
(struct)59.5 332.4 ms
0 g
( _fifo {)s
(        )59.5 322.4 ms
0 0.498 0 r
(// phyiscal addr of fifo.)s
0 g
(        dma_addr_t p_base;)59.5 312.4 ms
(        )59.5 302.4 ms
0 0.498 0 r
(// kernel base of fifo)s
0 g
(        )59.5 292.4 ms
0 0.125 0.251 r
(struct)s
0 g
( fifo_entry *k_base;)s
(        )59.5 282.4 ms
0 0.498 0 r
(// software head of fifo)s
0 g
(        )59.5 272.4 ms
0 0.125 0.251 r
(u32)s
0 g
( head;)s
(        )59.5 262.4 ms
0 0.498 0 r
(// tail cache of fifo)s
0 g
(        )59.5 252.4 ms
0 0.125 0.251 r
(u32)s
0 g
( tail_cache;)s
(};)59.5 242.4 ms
0 0.498 0 r
(// Structure containing DMA buffers.)59.5 222.4 ms
0 0.125 0.251 r
(struct)59.5 212.4 ms
0 g
( k3_dma_buf {)s
(        )59.5 202.4 ms
0 0.498 0 r
(// kernel base)s
0 g
(        )59.5 192.4 ms
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(int)s
0 g
( *k_base;)s
(        )59.5 182.4 ms
0 0.498 0 r
(// user base)s
0 g
(        )59.5 172.4 ms
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(long)s
0 g
( u_base;)s
(        )59.5 162.4 ms
0 0.498 0 r
(// address)s
0 g
(        dma_addr_t handle;)59.5 152.4 ms
(        )59.5 142.4 ms
0 0.498 0 r
(// number of bytes filled in this buffer.)s
0 g
(        )59.5 132.4 ms
0 0.125 0.251 r
(int)s
0 g
( current_size;)s
(} dma[DMA_BUFNUM];)59.5 122.4 ms
0 0.498 0 r
(// Driver variables.)59.5 102.4 ms
0 0.125 0.251 r
(struct)59.5 92.4 ms
0 g
( kyouko3_vars {)s
(        )59.5 82.4 ms
0 0.498 0 r
(// control region)s
0 g
(        )59.5 72.4 ms
0 0.125 0.251 r
(struct)s
0 g
( phys_region control;)s
(        )59.5 62.4 ms
0 0.498 0 r
(// framebuffer)s
0 g
(        )59.5 52.4 ms
0 0.125 0.251 r
(struct)s
0 g
( phys_region fb;)s
re sp
%%PageTrailer
%%Page: 2 2
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(kyouko3.c                                                                     Page 2)59.5 792.4 ms
F0 sf
(        )59.5 772.4 ms
0 0.498 0 r
(// True if VMODE is on.)s
0 g
(        )59.5 762.4 ms
0 0.125 0.251 r
(bool)s
0 g
( graphics_on;)s
(        )59.5 752.4 ms
0 0.498 0 r
(// True if DMA is enabled.)s
0 g
(        )59.5 742.4 ms
0 0.125 0.251 r
(bool)s
0 g
( dma_on;)s
(        )59.5 732.4 ms
0 0.498 0 r
(// Fifo)s
0 g
(        )59.5 722.4 ms
0 0.125 0.251 r
(struct)s
0 g
( _fifo fifo;)s
(        )59.5 712.4 ms
0 0.498 0 r
(// Device)s
0 g
(        )59.5 702.4 ms
0 0.125 0.251 r
(struct)s
0 g
( pci_dev *pdev;)s
(        )59.5 692.4 ms
0 0.498 0 r
(// Next available address to fill in DMA buffers.)s
0 g
(        )59.5 682.4 ms
0 0.125 0.251 r
(u32)s
0 g
( fill;)s
(        )59.5 672.4 ms
0 0.498 0 r
(// next dma buffer to drain.)s
0 g
(        )59.5 662.4 ms
0 0.125 0.251 r
(u32)s
0 g
( drain;)s
(        )59.5 652.4 ms
0 0.498 0 r
(// If DMA is full)s
0 g
(        )59.5 642.4 ms
0 0.125 0.251 r
(bool)s
0 g
( full;)s
(} k3;)59.5 632.4 ms
0 0.125 0.251 r
(static)59.5 612.4 ms
0 g
( )s
0 0.125 0.251 r
(inline)s
0 g
( )s
0 0.125 0.251 r
(void)s
0 g
( K_WRITE_REG\()s
0 0.125 0.251 r
(u32)s
0 g
( reg, )s
0 0.125 0.251 r
(u32)s
0 g
( value\))s
({)59.5 602.4 ms
(        *\(k3.control.k_base + \(reg >> )59.5 592.4 ms
0.251 0.251 0 r
(2)s
0 g
(\)\) = value;)s
(})59.5 582.4 ms
0 0.125 0.251 r
(static)59.5 562.4 ms
0 g
( )s
0 0.125 0.251 r
(inline)s
0 g
( )s
0 0.125 0.251 r
(u32)s
0 g
( K_READ_REG\()s
0 0.125 0.251 r
(u32)s
0 g
( reg\))s
({)59.5 552.4 ms
(        rmb\(\);)59.5 542.4 ms
(        )59.5 532.4 ms
0 0.251 0 r
(return)s
0 g
( *\(k3.control.k_base + \(reg >> )s
0.251 0.251 0 r
(2)s
0 g
(\)\);)s
(})59.5 522.4 ms
0 0.498 0 r
(/*)59.5 502.4 ms
( * Init function for the fifo. Sets up fifo head and tail values, and)59.5 492.4 ms
( * allocates memory for the fifo.)59.5 482.4 ms
( */)59.5 472.4 ms
0 0.125 0.251 r
(void)59.5 462.4 ms
0 g
( fifo_init\()s
0 0.125 0.251 r
(void)s
0 g
(\))s
({)59.5 452.4 ms
(        k3.fifo.k_base =)59.5 442.4 ms
(            pci_alloc_consistent\(k3.pdev, )59.5 432.4 ms
0.251 0.251 0 r
(8)s
0 g
( * FIFO_ENTRIES, &k3.fifo.p_base\);)s
(        K_WRITE_REG\(FIFO_START, k3.fifo.p_base\);)59.5 422.4 ms
(        K_WRITE_REG\(FIFO_END, k3.fifo.p_base + )59.5 412.4 ms
0.251 0.251 0 r
(8)s
0 g
( * FIFO_ENTRIES\);)s
(        k3.fifo.head = )59.5 402.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(        k3.fifo.tail_cache = )59.5 392.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(})59.5 382.4 ms
0 0.498 0 r
(/*)59.5 362.4 ms
( * Flush function for synchronizing the software-copy of the FIFO with the)59.5 352.4 ms
( * on-card fifo.)59.5 342.4 ms
( */)59.5 332.4 ms
0 0.125 0.251 r
(void)59.5 322.4 ms
0 g
( fifo_flush\()s
0 0.125 0.251 r
(void)s
0 g
(\))s
({)59.5 312.4 ms
(        K_WRITE_REG\(FIFO_HEAD, k3.fifo.head\);)59.5 302.4 ms
(        )59.5 292.4 ms
0 0.251 0 r
(while)s
0 g
( \(k3.fifo.tail_cache != k3.fifo.head\) {)s
(                k3.fifo.tail_cache = K_READ_REG\(FIFO_TAIL\);)59.5 282.4 ms
(                schedule\(\);)59.5 272.4 ms
(        })59.5 262.4 ms
(})59.5 252.4 ms
0 0.498 0 r
(/*)59.5 232.4 ms
( * Function for writing commands to fifo.)59.5 222.4 ms
( * Parameters:)59.5 212.4 ms
( * cmd - FIFO command to execute.)59.5 202.4 ms
( * val - Value used for the command.)59.5 192.4 ms
( */)59.5 182.4 ms
0 0.125 0.251 r
(void)59.5 172.4 ms
0 g
( fifo_write\()s
0 0.125 0.251 r
(u32)s
0 g
( cmd, )s
0 0.125 0.251 r
(u32)s
0 g
( val\))s
({)59.5 162.4 ms
(        k3.fifo.k_base[k3.fifo.head].command = cmd;)59.5 152.4 ms
(        k3.fifo.k_base[k3.fifo.head].value = val;)59.5 142.4 ms
(        k3.fifo.head++;)59.5 132.4 ms
(        )59.5 122.4 ms
0 0.251 0 r
(if)s
0 g
( \(k3.fifo.head >= FIFO_ENTRIES\) {)s
(                k3.fifo.head = )59.5 112.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(        })59.5 102.4 ms
(})59.5 92.4 ms
0 0.498 0 r
(/*)59.5 72.4 ms
( * DMA interrupt handler.)59.5 62.4 ms
( */)59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 3 3
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(kyouko3.c                                                                     Page 3)59.5 792.4 ms
F0 sf
(irqreturn_t dma_isr\()59.5 772.4 ms
0 0.125 0.251 r
(int)s
0 g
( irq, )s
0 0.125 0.251 r
(void)s
0 g
( *dev_id, )s
0 0.125 0.251 r
(struct)s
0 g
( pt_regs *regs\))s
({)59.5 762.4 ms
(        )59.5 752.4 ms
0 0.125 0.251 r
(int)s
0 g
( empty;)s
(        )59.5 742.4 ms
0 0.125 0.251 r
(int)s
0 g
( size;)s
(        )59.5 732.4 ms
0 0.125 0.251 r
(u32)s
0 g
( iflags = K_READ_REG\(INFO_STATUS\);)s
(        K_WRITE_REG\(INFO_STATUS, )59.5 712.4 ms
0.251 0.251 0 r
(0xf)s
0 g
(\);)s
(        )59.5 692.4 ms
0 0.498 0 r
(// spurious interrupt)s
0 g
(        )59.5 682.4 ms
0 0.251 0 r
(if)s
0 g
( \(\(iflags & )s
0.251 0.251 0 r
(0x02)s
0 g
(\) == )s
0.251 0.251 0 r
(0)s
0 g
(\) {)s
(                )59.5 672.4 ms
0 0.251 0 r
(return)s
0 g
( IRQ_NONE;)s
(        })59.5 662.4 ms
(        )59.5 652.4 ms
0 0.498 0 r
(// Check if all buffers full when interrupt was called.)s
0 g
(        k3.drain = \(k3.drain + )59.5 642.4 ms
0.251 0.251 0 r
(1)s
0 g
(\) % DMA_BUFNUM;)s
(        )59.5 632.4 ms
0 0.498 0 r
(// Check if buffers are now empty.)s
0 g
(        empty = k3.fill == k3.drain;)59.5 622.4 ms
(        )59.5 612.4 ms
0 0.498 0 r
(// If buffers left in queue, start next one)s
0 g
(        )59.5 602.4 ms
0 0.251 0 r
(if)s
0 g
( \(!empty\) {)s
(                size = dma[k3.fill].current_size;)59.5 592.4 ms
(                fifo_write\(BUFA_ADDR, dma[k3.drain].handle\);)59.5 582.4 ms
(                fifo_write\(BUFA_CONF, size\);)59.5 572.4 ms
(                K_WRITE_REG\(FIFO_HEAD, k3.fifo.head\);)59.5 562.4 ms
(        })59.5 552.4 ms
(        )59.5 542.4 ms
0 0.498 0 r
(// Buffer is empty and dma is off, we are shutting down so wake user.)s
0 g
(        )59.5 532.4 ms
0 0.251 0 r
(else)s
0 g
( {)s
(                )59.5 522.4 ms
0 0.251 0 r
(if)s
0 g
( \(!k3.dma_on\) {)s
(                        wake_up_interruptible\(&unbind_snooze\);)59.5 512.4 ms
(                })59.5 502.4 ms
(        })59.5 492.4 ms
(        )59.5 482.4 ms
0 0.498 0 r
(// Wake up sleeping user if buffer was full.)s
0 g
(        )59.5 472.4 ms
0 0.251 0 r
(if)s
0 g
( \(k3.full\) {)s
(                k3.full = )59.5 462.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(                wake_up_interruptible\(&dma_snooze\);)59.5 452.4 ms
(        })59.5 442.4 ms
(        )59.5 432.4 ms
0 0.498 0 r
(// if not-spurious, then)s
0 g
(        )59.5 422.4 ms
0 0.251 0 r
(return)s
0 g
( IRQ_HANDLED;)s
(})59.5 412.4 ms
0 0.498 0 r
(/*)59.5 392.4 ms
( * Initiate a DMA request if possible.)59.5 382.4 ms
( */)59.5 372.4 ms
0 0.125 0.251 r
(int)59.5 362.4 ms
0 g
( initiate_transfer\()s
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(long)s
0 g
( size\))s
({)59.5 352.4 ms
(        )59.5 342.4 ms
0 0.125 0.251 r
(int)s
0 g
( ret;)s
(        )59.5 332.4 ms
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(long)s
0 g
( flags;)s
(        )59.5 322.4 ms
0 0.498 0 r
(// grab dma_snooze lock so that we can use)s
0 g
(        )59.5 312.4 ms
0 0.498 0 r
(// wait_event_interruptible_locked.)s
0 g
(        spin_lock_irqsave\(&dma_snooze.lock, flags\);)59.5 302.4 ms
(        dma[k3.fill].current_size = size;)59.5 292.4 ms
(        )59.5 282.4 ms
0 0.251 0 r
(if)s
0 g
( \(k3.fill == k3.drain\) {)s
(                )59.5 272.4 ms
0 0.498 0 r
(// SET LOCKED RETURN VALUE)s
0 g
(                k3.fill = \(k3.fill + )59.5 262.4 ms
0.251 0.251 0 r
(1)s
0 g
(\) % DMA_BUFNUM;)s
(                ret = k3.fill;)59.5 252.4 ms
(                )59.5 232.4 ms
0 0.498 0 r
(// push next item to card.)s
0 g
(                fifo_write\(BUFA_ADDR, dma[k3.drain].handle\);)59.5 222.4 ms
(                fifo_write\(BUFA_CONF, size\);)59.5 212.4 ms
(                K_WRITE_REG\(FIFO_HEAD, k3.fifo.head\);)59.5 202.4 ms
(                spin_unlock_irqrestore\(&dma_snooze.lock, flags\);)59.5 182.4 ms
(                )59.5 172.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(        })59.5 162.4 ms
(        )59.5 152.4 ms
0 0.498 0 r
(// SET LOCKED RETURN VALUE)s
0 g
(        k3.fill = \(k3.fill + )59.5 142.4 ms
0.251 0.251 0 r
(1)s
0 g
(\) % DMA_BUFNUM;)s
(        ret = k3.fill;)59.5 132.4 ms
(        k3.full = k3.fill == k3.drain;)59.5 122.4 ms
(        spin_unlock_irqrestore\(&dma_snooze.lock, flags\);)59.5 112.4 ms
(        )59.5 102.4 ms
0 0.251 0 r
(if)s
0 g
( \(k3.full\) {)s
(                wait_event_interruptible\(dma_snooze, !k3.full\);)59.5 92.4 ms
(        })59.5 82.4 ms
(        )59.5 72.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(})59.5 62.4 ms
re sp
%%PageTrailer
%%Page: 4 4
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(kyouko3.c                                                                     Page 4)59.5 792.4 ms
F0 sf
0 0.498 0 r
(/*)59.5 772.4 ms
( * IOCTL function containing logic for turning on/off graphics mode, on/off)59.5 762.4 ms
( * dma, writing to the fifo, and flushing the fifo queue.)59.5 752.4 ms
( */)59.5 742.4 ms
0 0.125 0.251 r
(long)59.5 732.4 ms
0 g
( kyouko3_ioctl\()s
0 0.125 0.251 r
(struct)s
0 g
( file *fp, )s
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(int)s
0 g
( cmd, )s
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(long)s
0 g
( arg\))s
({)59.5 722.4 ms
(        )59.5 712.4 ms
0 0.125 0.251 r
(struct)s
0 g
( fifo_entry entry;)s
(        )59.5 702.4 ms
0 0.125 0.251 r
(void)s
0 g
( __user *argp = \()s
0 0.125 0.251 r
(void)s
0 g
( __user *\)arg;)s
(        )59.5 692.4 ms
0 0.125 0.251 r
(int)s
0 g
( i;)s
(        )59.5 682.4 ms
0 0.125 0.251 r
(long)s
0 g
( ret = )s
0.251 0.251 0 r
(0)s
0 g
(;)s
(        )59.5 672.4 ms
0 0.125 0.251 r
(int)s
0 g
( count;)s
(        )59.5 652.4 ms
0 0.251 0 r
(switch)s
0 g
( \(cmd\) {)s
(        )59.5 642.4 ms
0 0.251 0 r
(case)s
0 g
( VMODE:)s
(                )59.5 632.4 ms
0 0.498 0 r
(// init graphics mode)s
0 g
(                )59.5 622.4 ms
0 0.251 0 r
(if)s
0 g
( \(arg == GRAPHICS_ON\) {)s
(                        K_WRITE_REG\(FRAME_COLUMNS, )59.5 602.4 ms
0.251 0.251 0 r
(1024)s
0 g
(\);)s
(                        K_WRITE_REG\(FRAME_ROWS, )59.5 592.4 ms
0.251 0.251 0 r
(768)s
0 g
(\);)s
(                        K_WRITE_REG\(FRAME_ROWPITCH, )59.5 582.4 ms
0.251 0.251 0 r
(1024)s
0 g
( * )s
0.251 0.251 0 r
(4)s
0 g
(\);)s
(                        K_WRITE_REG\(FRAME_PIXELFORMAT, )59.5 572.4 ms
0.251 0.251 0 r
(0xf888)s
0 g
(\);)s
(                        K_WRITE_REG\(FRAME_STARTADDRESS, )59.5 562.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        K_WRITE_REG\(CONF_ACCELERATION, )59.5 542.4 ms
0.251 0.251 0 r
(0x40000000)s
0 g
(\);)s
(                        K_WRITE_REG\(ENC_WIDTH, )59.5 522.4 ms
0.251 0.251 0 r
(1024)s
0 g
(\);)s
(                        K_WRITE_REG\(ENC_HEIGHT, )59.5 512.4 ms
0.251 0.251 0 r
(768)s
0 g
(\);)s
(                        K_WRITE_REG\(ENC_OFFSETX, )59.5 502.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        K_WRITE_REG\(ENC_OFFSETY, )59.5 492.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        K_WRITE_REG\(ENC_FRAME, )59.5 482.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        K_WRITE_REG\(CONF_MODESET, )59.5 462.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        msleep\()59.5 442.4 ms
0.251 0.251 0 r
(10)s
0 g
(\);)s
(                        fifo_write\(CLEAR_COLOR, )59.5 422.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        fifo_write\(CLEAR_COLOR + )59.5 412.4 ms
0.251 0.251 0 r
(0x0004)s
0 g
(, )s
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        fifo_write\(CLEAR_COLOR + )59.5 402.4 ms
0.251 0.251 0 r
(0x0008)s
0 g
(, )s
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        fifo_write\(CLEAR_COLOR + )59.5 392.4 ms
0.251 0.251 0 r
(0x000c)s
0 g
(, )s
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        fifo_write\(RASTER_CLEAR, )59.5 372.4 ms
0.251 0.251 0 r
(3)s
0 g
(\);)s
(                        fifo_write\(RASTER_FLUSH, )59.5 362.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        fifo_flush\(\);)59.5 352.4 ms
(                        k3.graphics_on = )59.5 332.4 ms
0.251 0.251 0 r
(1)s
0 g
(;)s
(                })59.5 322.4 ms
(                )59.5 312.4 ms
0 0.498 0 r
(// disable graphics mode.)s
0 g
(                )59.5 302.4 ms
0 0.251 0 r
(else)s
0 g
( )s
0 0.251 0 r
(if)s
0 g
( \(arg == GRAPHICS_OFF\) {)s
(                        )59.5 292.4 ms
0 0.251 0 r
(if)s
0 g
( \(k3.dma_on\) {)s
(                                kyouko3_ioctl\(fp, UNBIND_DMA, )59.5 282.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        } )59.5 272.4 ms
0 0.251 0 r
(else)s
0 g
( {)s
(                                fifo_flush\(\);)59.5 262.4 ms
(                        })59.5 252.4 ms
(                        K_WRITE_REG\(CONF_ACCELERATION, )59.5 242.4 ms
0.251 0.251 0 r
(0x80000000)s
0 g
(\);)s
(                        K_WRITE_REG\(CONF_MODESET, )59.5 232.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                        k3.graphics_on = )59.5 222.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(                })59.5 212.4 ms
(                )59.5 202.4 ms
0 0.251 0 r
(break)s
0 g
(;)s
(        )59.5 192.4 ms
0 0.498 0 r
(// Add item to fifo queue.)s
0 g
(        )59.5 182.4 ms
0 0.251 0 r
(case)s
0 g
( FIFO_QUEUE:)s
(                )59.5 172.4 ms
0 0.251 0 r
(if)s
0 g
( \(\(ret = copy_from_user\(&entry, argp,)s
(                                          )59.5 162.4 ms
0 0.251 0 r
(sizeof)s
0 g
(\()s
0 0.125 0.251 r
(struct)s
0 g
( fifo_entry\)\)\)\) {)s
(                        )59.5 152.4 ms
0 0.251 0 r
(return)s
0 g
( -)s
0.251 0.251 0 r
(EFAULT)s
0 g
(;)s
(                })59.5 142.4 ms
(                fifo_write\(entry.command, entry.value\);)59.5 132.4 ms
(                )59.5 122.4 ms
0 0.251 0 r
(break)s
0 g
(;)s
(        )59.5 112.4 ms
0 0.498 0 r
(// Sync software fifo with hardware fifo.)s
0 g
(        )59.5 102.4 ms
0 0.251 0 r
(case)s
0 g
( FIFO_FLUSH:)s
(                fifo_flush\(\);)59.5 92.4 ms
(                )59.5 82.4 ms
0 0.251 0 r
(break)s
0 g
(;)s
(        )59.5 72.4 ms
0 0.498 0 r
(// Bind DMA buffers to begin dma actions.)s
0 g
(        )59.5 62.4 ms
0 0.251 0 r
(case)s
0 g
( BIND_DMA:)s
(                k3.dma_on = )59.5 52.4 ms
0.251 0.251 0 r
(1)s
0 g
(;)s
re sp
%%PageTrailer
%%Page: 5 5
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(kyouko3.c                                                                     Page 5)59.5 792.4 ms
F0 sf
(                )59.5 772.4 ms
0 0.498 0 r
(// bail if we can't init)s
0 g
(                )59.5 762.4 ms
0 0.251 0 r
(if)s
0 g
( \(\(ret = pci_enable_msi\(k3.pdev\)\)\) {)s
(                        )59.5 752.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(                })59.5 742.4 ms
(                )59.5 732.4 ms
0 0.251 0 r
(if)s
0 g
( \(\(ret = request_irq\(k3.pdev->irq, \(irq_handler_t\)dma_isr,)s
(                                       IRQF_SHARED, )59.5 722.4 ms
0.251 0.251 0 r
("kyouku3 dma isr")s
0 g
(, &k3\)\)\) {)s
(                        )59.5 712.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(                })59.5 702.4 ms
(                K_WRITE_REG\(CONF_INTERRUPT, )59.5 692.4 ms
0.251 0.251 0 r
(0x02)s
0 g
(\);)s
(                )59.5 682.4 ms
0 0.498 0 r
(// acquire dma buffers)s
0 g
(                )59.5 672.4 ms
0 0.251 0 r
(for)s
0 g
( \(i = )s
0.251 0.251 0 r
(0)s
0 g
(; i < DMA_BUFNUM; i++\) {)s
(                        k3.fill = i;)59.5 662.4 ms
(                        dma[i].k_base = pci_alloc_consistent\()59.5 652.4 ms
(                            k3.pdev, DMA_BUFSIZE, &dma[i].handle\);)59.5 642.4 ms
(                        dma[i].u_base =)59.5 632.4 ms
(                            vm_mmap\(fp, )59.5 622.4 ms
0.251 0.251 0 r
(0)s
0 g
(, DMA_BUFSIZE, PROT_READ | PROT_WRITE,)s
(                                    MAP_SHARED, VM_PGOFF_DMA\);)59.5 612.4 ms
(                })59.5 602.4 ms
(                )59.5 592.4 ms
0 0.498 0 r
(// init dma queue counters.)s
0 g
(                k3.fill = )59.5 582.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(                k3.drain = )59.5 572.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(                )59.5 562.4 ms
0 0.498 0 r
(// copy back first address or bail if we fail.)s
0 g
(                )59.5 552.4 ms
0 0.251 0 r
(if)s
0 g
( \(\(ret = copy_to_user\(argp, &dma[)s
0.251 0.251 0 r
(0)s
0 g
(].u_base,)s
(                                        )59.5 542.4 ms
0 0.251 0 r
(sizeof)s
0 g
(\()s
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(long)s
0 g
(\)\)\)\) {)s
(                        )59.5 532.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(                })59.5 522.4 ms
(                )59.5 512.4 ms
0 0.251 0 r
(break)s
0 g
(;)s
(        )59.5 502.4 ms
0 0.498 0 r
(// Finish DMA and de-queue buffers.)s
0 g
(        )59.5 492.4 ms
0 0.251 0 r
(case)s
0 g
( UNBIND_DMA:)s
(                )59.5 482.4 ms
0 0.498 0 r
(// set flag to wake up user when buffer is empty)s
0 g
(                k3.dma_on = )59.5 472.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(                )59.5 462.4 ms
0 0.498 0 r
(// snooze user and empty queue)s
0 g
(                )59.5 452.4 ms
0 0.251 0 r
(if)s
0 g
( \(k3.fill != k3.drain\) {)s
(                        wait_event_interruptible\(unbind_snooze,)59.5 442.4 ms
(                                                 k3.fill == k3.drain\);)59.5 432.4 ms
(                })59.5 422.4 ms
(                )59.5 412.4 ms
0 0.498 0 r
(// Unmap buffers.)s
0 g
(                )59.5 402.4 ms
0 0.251 0 r
(for)s
0 g
( \(i = )s
0.251 0.251 0 r
(0)s
0 g
(; i < DMA_BUFNUM; i++\) {)s
(                        vm_munmap\(dma[i].u_base, DMA_BUFSIZE\);)59.5 392.4 ms
(                        pci_free_consistent\(k3.pdev, DMA_BUFSIZE, dma[i].k_base,)59.5 382.4 ms
(                                            dma[i].handle\);)59.5 372.4 ms
(                })59.5 362.4 ms
(                K_WRITE_REG\(CONF_INTERRUPT, )59.5 352.4 ms
0.251 0.251 0 r
(0)s
0 g
(\);)s
(                free_irq\(k3.pdev->irq, &k3\);)59.5 342.4 ms
(                pci_disable_msi\(k3.pdev\);)59.5 332.4 ms
(                )59.5 322.4 ms
0 0.251 0 r
(break)s
0 g
(;)s
(        )59.5 312.4 ms
0 0.498 0 r
(// Start a dma buffer.)s
0 g
(        )59.5 302.4 ms
0 0.251 0 r
(case)s
0 g
( START_DMA:)s
(                )59.5 292.4 ms
0 0.498 0 r
(// using copies to preserve return as an error value.)s
0 g
(                )59.5 282.4 ms
0 0.251 0 r
(if)s
0 g
( \(\(ret =)s
(                         copy_from_user\(&count, argp, )59.5 272.4 ms
0 0.251 0 r
(sizeof)s
0 g
(\()s
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(int)s
0 g
(\)\)\)\) {)s
(                        )59.5 262.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(                })59.5 252.4 ms
(                )59.5 242.4 ms
0 0.498 0 r
(// initiate transfer is the bulk of this function)s
0 g
(                ret = initiate_transfer\(count\);)59.5 232.4 ms
(                )59.5 222.4 ms
0 0.251 0 r
(if)s
0 g
( \(\(ret = copy_to_user\(argp, &dma[ret].u_base,)s
(                                        )59.5 212.4 ms
0 0.251 0 r
(sizeof)s
0 g
(\()s
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(long)s
0 g
(\)\)\)\) {)s
(                        )59.5 202.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(                })59.5 192.4 ms
(                )59.5 182.4 ms
0 0.251 0 r
(break)s
0 g
(;)s
(        })59.5 172.4 ms
(        )59.5 162.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(})59.5 152.4 ms
0 0.498 0 r
(/*)59.5 132.4 ms
( * Open function for kernel module.)59.5 122.4 ms
( */)59.5 112.4 ms
0 0.125 0.251 r
(int)59.5 102.4 ms
0 g
( kyouko3_open\()s
0 0.125 0.251 r
(struct)s
0 g
( inode *inode, )s
0 0.125 0.251 r
(struct)s
0 g
( file *fp\))s
({)59.5 92.4 ms
(        )59.5 82.4 ms
0 0.498 0 r
(// ioremap_wc is faster than ioremap on some hardware)s
0 g
(        k3.control.k_base = ioremap_wc\(k3.control.p_base, k3.control.len\);)59.5 72.4 ms
(        k3.fb.k_base = ioremap_wc\(k3.fb.p_base, k3.fb.len\);)59.5 62.4 ms
(        fifo_init\(\);)59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 6 6
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(kyouko3.c                                                                     Page 6)59.5 792.4 ms
F0 sf
(        )59.5 772.4 ms
0 0.251 0 r
(return)s
0 g
( )s
0.251 0.251 0 r
(0)s
0 g
(;)s
(})59.5 762.4 ms
0 0.498 0 r
(/*)59.5 742.4 ms
( * Release function for kernel module.)59.5 732.4 ms
( */)59.5 722.4 ms
0 0.125 0.251 r
(int)59.5 712.4 ms
0 g
( kyouko3_release\()s
0 0.125 0.251 r
(struct)s
0 g
( inode *inode, )s
0 0.125 0.251 r
(struct)s
0 g
( file *fp\))s
({)59.5 702.4 ms
(        kyouko3_ioctl\(fp, VMODE, GRAPHICS_OFF\);)59.5 692.4 ms
(        fifo_flush\(\);)59.5 682.4 ms
(        iounmap\(k3.control.k_base\);)59.5 672.4 ms
(        iounmap\(k3.fb.k_base\);)59.5 662.4 ms
(        pci_free_consistent\(k3.pdev, )59.5 652.4 ms
0.251 0.251 0 r
(8192)s
0 g
(, k3.fifo.k_base, k3.fifo.p_base\);)s
(        )59.5 642.4 ms
0 0.251 0 r
(return)s
0 g
( )s
0.251 0.251 0 r
(0)s
0 g
(;)s
(})59.5 632.4 ms
0 0.498 0 r
(/*)59.5 612.4 ms
( * Memory mapping function. Maps to control region, framebuffer, or DMA)59.5 602.4 ms
( * buffers.)59.5 592.4 ms
( */)59.5 582.4 ms
0 0.125 0.251 r
(int)59.5 572.4 ms
0 g
( kyouko3_mmap\()s
0 0.125 0.251 r
(struct)s
0 g
( file *fp, )s
0 0.125 0.251 r
(struct)s
0 g
( vm_area_struct *vma\))s
({)59.5 562.4 ms
(        )59.5 552.4 ms
0 0.125 0.251 r
(int)s
0 g
( ret = )s
0.251 0.251 0 r
(0)s
0 g
(;)s
(        )59.5 542.4 ms
0 0.125 0.251 r
(unsigned)s
0 g
( )s
0 0.125 0.251 r
(long)s
0 g
( off;)s
(        )59.5 522.4 ms
0 0.498 0 r
(// vm_iomap_memory provides a simpler API than io_remap_pfn_range and)s
0 g
(        )59.5 512.4 ms
0 0.498 0 r
(// reduces possibilities for bugs)s
0 g
(        )59.5 502.4 ms
0 0.498 0 r
(// Offset is just used to choose regions, it isn't a real offset.)s
0 g
(        off = vma->vm_pgoff << PAGE_SHIFT;)59.5 492.4 ms
(        vma->vm_pgoff = )59.5 482.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(        )59.5 472.4 ms
0 0.251 0 r
(switch)s
0 g
( \(off\) {)s
(        )59.5 462.4 ms
0 0.251 0 r
(case)s
0 g
( VM_PGOFF_CONTROL:)s
(                ret = vm_iomap_memory\(vma, k3.control.p_base, k3.control.len\);)59.5 452.4 ms
(                )59.5 442.4 ms
0 0.251 0 r
(break)s
0 g
(;)s
(        )59.5 432.4 ms
0 0.251 0 r
(case)s
0 g
( VM_PGOFF_FB:)s
(                ret = vm_iomap_memory\(vma, k3.fb.p_base, k3.fb.len\);)59.5 422.4 ms
(                )59.5 412.4 ms
0 0.251 0 r
(break)s
0 g
(;)s
(        )59.5 402.4 ms
0 0.251 0 r
(case)s
0 g
( VM_PGOFF_DMA:)s
(                ret = vm_iomap_memory\(vma, dma[k3.fill].handle, DMA_BUFSIZE\);)59.5 392.4 ms
(                )59.5 382.4 ms
0 0.251 0 r
(break)s
0 g
(;)s
(        })59.5 372.4 ms
(        )59.5 362.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(})59.5 352.4 ms
0 0.498 0 r
(/*)59.5 332.4 ms
( * File operations structure)59.5 322.4 ms
( */)59.5 312.4 ms
0 0.125 0.251 r
(struct)59.5 302.4 ms
0 g
( file_operations kyouko3_fops = {.open = kyouko3_open,)s
(                                       .release = kyouko3_release,)59.5 292.4 ms
(                                       .mmap = kyouko3_mmap,)59.5 282.4 ms
(                                       .unlocked_ioctl = kyouko3_ioctl,)59.5 272.4 ms
(                                       .owner = THIS_MODULE};)59.5 262.4 ms
0 0.498 0 r
(// Kyouko3 device.)59.5 242.4 ms
0 0.125 0.251 r
(struct)59.5 232.4 ms
0 g
( cdev kyouko3_dev;)s
0 0.498 0 r
(/*)59.5 212.4 ms
( * Probe function.)59.5 202.4 ms
( */)59.5 192.4 ms
0 0.125 0.251 r
(int)59.5 182.4 ms
0 g
( kyouko3_probe\()s
0 0.125 0.251 r
(struct)s
0 g
( pci_dev *pdev, )s
0 0.125 0.251 r
(const)s
0 g
( )s
0 0.125 0.251 r
(struct)s
0 g
( pci_device_id *pci_id\))s
({)59.5 172.4 ms
(        k3.pdev = pdev;)59.5 162.4 ms
(        k3.control.p_base = pci_resource_start\(pdev, )59.5 142.4 ms
0.251 0.251 0 r
(1)s
0 g
(\);)s
(        k3.control.len = pci_resource_len\(pdev, )59.5 132.4 ms
0.251 0.251 0 r
(1)s
0 g
(\);)s
(        k3.fb.p_base = pci_resource_start\(pdev, )59.5 112.4 ms
0.251 0.251 0 r
(2)s
0 g
(\);)s
(        k3.fb.len = pci_resource_len\(pdev, )59.5 102.4 ms
0.251 0.251 0 r
(2)s
0 g
(\);)s
(        )59.5 82.4 ms
0 0.251 0 r
(return)s
0 g
( )s
0.251 0.251 0 r
(0)s
0 g
(;)s
(})59.5 72.4 ms
0 0.498 0 r
(/*)59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 7 7
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(kyouko3.c                                                                     Page 7)59.5 792.4 ms
F0 sf
0 0.498 0 r
( * Remove function.)59.5 772.4 ms
( */)59.5 762.4 ms
0 0.125 0.251 r
(void)59.5 752.4 ms
0 g
( kyouko3_remove\()s
0 0.125 0.251 r
(struct)s
0 g
( pci_dev *pdev\) { pci_disable_device\(pdev\); })s
0 0.498 0 r
(/*)59.5 732.4 ms
( * Device ids.)59.5 722.4 ms
( */)59.5 712.4 ms
0 0.125 0.251 r
(struct)59.5 702.4 ms
0 g
( pci_device_id kyouko3_dev_ids[] = {)s
(    {PCI_DEVICE\(PCI_VENDOR_ID_CCORSI, PCI_DEVICE_ID_CCORSI_KYOUKO3\)}, {)59.5 692.4 ms
0.251 0.251 0 r
(0)s
0 g
(}};)s
0 0.498 0 r
(/*)59.5 672.4 ms
( * Driver struct)59.5 662.4 ms
( */)59.5 652.4 ms
0 0.125 0.251 r
(struct)59.5 642.4 ms
0 g
( pci_driver kyouko3_pci_drv = {.name = )s
0.251 0.251 0 r
("kyouko3_pci_drv")s
0 g
(,)s
(                                     .id_table = kyouko3_dev_ids,)59.5 632.4 ms
(                                     .probe = kyouko3_probe,)59.5 622.4 ms
(                                     .remove = kyouko3_remove};)59.5 612.4 ms
0 0.498 0 r
(/*)59.5 592.4 ms
( * Basic init function.)59.5 582.4 ms
( */)59.5 572.4 ms
0 0.125 0.251 r
(int)59.5 562.4 ms
0 g
( kyouko3_init\()s
0 0.125 0.251 r
(void)s
0 g
(\))s
({)59.5 552.4 ms
(        )59.5 542.4 ms
0 0.125 0.251 r
(int)s
0 g
( ret;)s
(        cdev_init\(&kyouko3_dev, &kyouko3_fops\);)59.5 532.4 ms
(        cdev_add\(&kyouko3_dev, MKDEV\()59.5 522.4 ms
0.251 0.251 0 r
(500)s
0 g
(, )s
0.251 0.251 0 r
(127)s
0 g
(\), )s
0.251 0.251 0 r
(1)s
0 g
(\);)s
(        k3.dma_on = )59.5 512.4 ms
0.251 0.251 0 r
(0)s
0 g
(;)s
(        ret = pci_register_driver\(&kyouko3_pci_drv\);)59.5 502.4 ms
(        ret = pci_enable_device\(k3.pdev\);)59.5 492.4 ms
(        pci_set_master\(k3.pdev\);)59.5 482.4 ms
(        )59.5 472.4 ms
0 0.251 0 r
(return)s
0 g
( ret;)s
(})59.5 462.4 ms
0 0.498 0 r
(/*)59.5 442.4 ms
( * Basic exit function.)59.5 432.4 ms
( */)59.5 422.4 ms
0 0.125 0.251 r
(void)59.5 412.4 ms
0 g
( kyouko3_exit\()s
0 0.125 0.251 r
(void)s
0 g
(\))s
({)59.5 402.4 ms
(        cdev_del\(&kyouko3_dev\);)59.5 392.4 ms
(        pci_unregister_driver\(&kyouko3_pci_drv\);)59.5 382.4 ms
(})59.5 372.4 ms
(module_init\(kyouko3_init\);)59.5 352.4 ms
(module_exit\(kyouko3_exit\);)59.5 342.4 ms
re sp
%%PageTrailer
%%Trailer
%%Pages: 7
%%EOF
